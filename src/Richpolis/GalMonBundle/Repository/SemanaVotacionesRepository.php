<?php

namespace Richpolis\GalMonBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SemanaVotacionesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SemanaVotacionesRepository extends EntityRepository {

    public function getMaxPosicion() {
        $em = $this->getEntityManager();
        $query = $em->createQuery('
            SELECT COUNT(s.posicion) as value 
            FROM RichpolisGalMonBundle:SemanaVotaciones s 
            ORDER BY s.posicion ASC
            ');
        $max = $query->getResult();
        return $max[0]['value'];
    }

    public function getSemanaActual($em=null) {
        if($em==null){
            $em = $this->getEntityManager();    
        }
        $query = $em->createQuery('
                    SELECT s FROM RichpolisGalMonBundle:SemanaVotaciones s
                    LEFT JOIN s.votaciones v 
                    WHERE s.isActive = :active
                    ORDER BY v.posicion ASC 
                    LIMIT 1 
                ')->setParameters(array('active' => true));
        $semanas= $query->getResult();
        return $semana[0];
    }

    public function getSemanaConGaleriaPorId($semana) {
        $em = $this->getEntityManager();
        $semanas=null;
        if($semana>0){
            $query = $em->createQuery('
                    SELECT s 
                    FROM RichpolisGalMonBundle:SemanaVotaciones s 
                    LEFT JOIN s.votaciones v 
                    WHERE s.id = :semana 
                    ORDER BY v.posicion ASC 
                    LIMIT 1 
                ')->setParameters(array('semana' => $semana));
            $semanas=$query->getResult();
            return $semanas[0];
        }else{
            return $this->getSemanaActual($em);
        }
        
    }

    public function getSemanasExceptoSemanaActual($semana_actual = 0, $activas = true) {
        $em = $this->getEntityManager();
        $query = $em->createQuery('
                    SELECT s 
                    FROM RichpolisGalMonBundle:SemanaVotaciones s 
                    WHERE s.id <> :actual 
                    AND s.isActive = :active 
                    ORDER BY s.posicion DESC 
                ')->setParameters(array("actual" => $semana_actual, 'active' => $activas));
        return $query->getResult();
    }

    public function getQuerySemanasActivas($todos = true) {
        $query=$this->createQueryBuilder('s')
                    ->orderBy('s.posicion', 'DESC');
        if(!$todos){
            $query->where('s.isActive=:active')
                  ->setParameter('active', true);
        }
        return $query->getQuery();
    }

    public function getSemanasActivas($todos = false) {
        $query = $this->getQuerySemanasActivas($active);
        return $query->getResult();
    }

}