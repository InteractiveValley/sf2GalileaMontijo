<?php

namespace Richpolis\GalMonBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * FansRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FansRepository extends EntityRepository
{
    public function getMaxPosicion(){
        $em=$this->getEntityManager();
        $query=$em->createQuery('
            SELECT MAX(f.posicion) as value 
            FROM RichpolisGalMonBundle:Fans f 
            ORDER BY f.posicion ASC
            ');
        $max=$query->getResult();
        return $max[0]['value'];
    }
    
       
    public function getQueryFansActivas($todas=false){
        $em=$this->getEntityManager();
        if(!$todas){
            $query=$em->createQuery('
                SELECT f 
                FROM RichpolisGalMonBundle:Fans f 
                WHERE f.isActive=:active 
                ORDER BY f.nombre, f.createdAt ASC
           ')->setParameter('active', true);
        }else{
            $query=$em->createQuery('
                SELECT f 
                FROM RichpolisGalMonBundle:Fans f 
                ORDER BY f.nombre, f.createdAt ASC
           ');
        }
        return $query;
    }
    
    public function getFansActivas($todas=false){
        $query=$this->getQueryFansActivas($todas);
        return $query->getResult();
    }
    
    public function getRegistroUpOrDown($posicionRegistro,$up=true){
        // $up = true, $up = false is down
        if($up){
            //up
            $query=$this->createQueryBuilder('p')
                    ->where('p.posicion>:posicion')
                    ->setParameter('posicion', $posicionRegistro)
                    ->orderBy('p.posicion', 'ASC');
        }else{
            //down
            $query=$this->createQueryBuilder('p')
                    ->where('p.posicion<:posicion')
                    ->setParameter('posicion', $posicionRegistro)
                    ->orderBy('p.posicion', 'ASC');
        }
        
        return $query->getQuery()->setMaxResults(1)->getOneOrNullResult();
    }
}